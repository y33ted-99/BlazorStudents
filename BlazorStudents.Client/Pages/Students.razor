@page "/students"
@attribute [StreamRendering]
@inject HttpClient Http

<h1>Students</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (students == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>School</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in students)
            {
                <tr>
                    <td>@item.StudentId</td>
                    <td>@item.FirstName @item.LastName</td>
                    <td>@item.School</td>
                    <td><a class="btn btn-success btn-sm" href="/updel/@item.StudentId/edit">edit</a></td>
                    <td><a class="btn btn-danger btn-sm" href="/updel/@item.StudentId/del">del</a></td> 
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Student[]? students;

    protected override async Task OnInitializedAsync()
    {
        // Fetch students data
        students = await Http.GetFromJsonAsync<Student[]>("api/students");
    }

    private class Student
    {
        public int StudentId { get; set; }
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? School { get; set; }
    }

}